services:
  server:
    image: rogueserver:latest
    restart: unless-stopped
    environment:
      debug: "true"
      dbaddr: db
      dbuser: pokerogue
      dbpass: pokerogue
      dbname: pokeroguedb
      gameurl: http://localhost:8000
      callbackurl: http://localhost:8001

    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
    ports:
      - "8001:8001"

  db:
    image: mariadb:11
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized" ]
      start_period: 10s
      #start_interval: 10s
      interval: 1m
      timeout: 5s
      retries: 3
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: pokeroguedb
      MYSQL_USER: pokerogue
      MYSQL_PASSWORD: pokerogue
    volumes:
      - database:/var/lib/mysql
      - ./mariadb.cnf:/etc/mysql/conf.d/mariadb.cnf  # 설정 파일 로드
    networks:
      - internal
    ports:
      - "3306:3306"

  mysqld_exporter:
    image: prom/mysqld-exporter:latest
    container_name: mysqld_exporter
    restart: always
    ports:
      - "9104:9104"
    environment:
      DATA_SOURCE_NAME: "myuser:mypassword@(mariadb:3306)/"
    depends_on:
      - mariadb

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - mysqld_exporter

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus



  # Watchtower is a service that will automatically update your running containers
  # when a new image is available. This is useful for keeping your server up-to-date.
  # see https://containrrr.dev/watchtower/ for more information.
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    security_opt:
      - no-new-privileges:true
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_SCHEDULE: "@midnight"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  database:
  mariadb_data:
  grafana_data:

networks:
  internal:

